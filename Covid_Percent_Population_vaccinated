SELECT location, date, total_cases, new_cases, total_deaths, population
  FROM `nomadic-buffer-363507.Covid.Covid_deaths`
  order by 1, 2

-- looking at total case vs total deaths --

SELECT location, date, total_cases, total_deaths, (total_deaths/total_cases)*100 as DeathPercentage
  FROM `nomadic-buffer-363507.Covid.Covid_deaths`
  Where location = 'Japan'
  order by 1, 2

-- looking at total cases vs pupoation --

SELECT location, date, total_cases, population, (total_cases/population)*100 as CasePercentage
  FROM `nomadic-buffer-363507.Covid.Covid_deaths`
  where continent is not null
  order by 1, 2

-- looking at coutnries with highest infection rate compared to pupolation --

SELECT location, population, max(total_cases) as highest_infection_count, MAX((total_cases/population))*100 as InfectedPercentage
  FROM `nomadic-buffer-363507.Covid.Covid_deaths`
  where continent is not null
  group by location, population
  order by InfectedPercentage desc

--showing the countries with highest death count per population --

SELECT location, max(cast(total_deaths as int)) as total_death_count
  FROM `nomadic-buffer-363507.Covid.Covid_deaths`
  where continent is not null
  group by location
  order by total_death_count desc

-- lets break things down by continet --

SELECT continent, max(cast(total_deaths as int)) as total_death_count
  FROM `nomadic-buffer-363507.Covid.Covid_deaths`
  where continent is not null
  group by continent
  order by total_death_count desc

-- showing continents with the highest death counts per populations --

SELECT continent, max(cast(total_deaths as int)) as total_death_count
  FROM `nomadic-buffer-363507.Covid.Covid_deaths`
  where continent is not null
  group by continent
  order by total_death_count desc

--Global numbers
SELECT SUM(new_cases) as total_cases, sum(cast(new_deaths as int)) as total_deaths, sum(cast(new_deaths as int))/sum(new_cases)*100 as DeathPercentage
  FROM `nomadic-buffer-363507.Covid.Covid_deaths`
  Where continent is not null
  --group by date
  order by 1, 2

-- looking at total population vs vanccinations --
select dea.continent, dea.location, dea.date, population, vac. new_vaccinations
,sum(vac. new_vaccinations) over (partition by dea.location order by dea.location, dea.date) as Rolling_people_vanccinated
,(Rolling_people_vanccinated/population)*100
  from `nomadic-buffer-363507.Covid.Covid_deaths` dea
  join `nomadic-buffer-363507.Covid.Covid_vaccinations` vac
    on dea.location = vac.location
    and dea.date = vac.date
  Where dea.continent is not null
  order by 2, 3

-- use cte
with pop_vs_vac --(continent location Date popuation new_vaccinations Rolling_people_vanccinated)
as 
(
select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
,sum(vac. new_vaccinations) over (partition by dea.location order by dea.location, dea.date) as Rolling_people_vanccinated
-- ,(Rolling_people_vanccinated/population)*100
  from `nomadic-buffer-363507.Covid.Covid_deaths` dea
  join `nomadic-buffer-363507.Covid.Covid_vaccinations` vac
    on dea.location = vac.location
    and dea.date = vac.date
  Where dea.continent is not null
  -- order by 2, 3
)
select *, (Rolling_people_vanccinated/population)*100 from pop_vs_vac

--temp table-- not working

create table Percent_Population_vaccinated
(
Continent nvarchar (255),
Location nvarchar (255),
Date datetime,
Population numeric,
New_vaccinations numeric,
Rolling_people_vanccinated numeric
) ;
Insert into Percent_Population_vaccinated
  select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations,sum(vac. new_vaccinations) over (partition by dea.location order by dea.location, dea.date) as Rolling_people_vanccinated
-- ,(Rolling_people_vanccinated/population)*100
  from `nomadic-buffer-363507.Covid.Covid_deaths` dea
  join `nomadic-buffer-363507.Covid.Covid_vaccinations` vac
    on dea.location = vac.location
    and dea.date = vac.date
  Where dea.continent is not null
--order by 2, 3
select *, (Rolling_people_vanccinated/population)*100
from Percent_Population_vaccinated


-- ccreating view to store data for later visualizations

create table `nomadic-buffer-363507.Covid.Covid_Percent_Population_vaccinated` as
select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, sum(vac. new_vaccinations) over (partition by dea.location order by dea.location, dea.date) as Rolling_people_vanccinated
-- ,(Rolling_people_vanccinated/population)*100
from `nomadic-buffer-363507.Covid.Covid_deaths` dea
join `nomadic-buffer-363507.Covid.Covid_vaccinations` vac
      on dea.location = vac.location
      and dea.date = vac.date
  Where dea.continent is not null
  --order by 2, 3

select *
from `nomadic-buffer-363507.Covid.Covid_Percent_Population_vaccinated`
